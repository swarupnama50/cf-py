DEBUG:root:Received webhook data: {'data': {'order': {'order_id': 'hsdfb70141', 'order_amount': 10.0, 'order_currency': 'INR', 'order_tags': None}, 'payment': {'cf_payment_id': 5114911375427, 'payment_status': 'SUCCESS', 'payment_amount': 10.0, 'payment_currency': 'INR', 'payment_message': 'Simulated response message', 'payment_time': '2024-09-21T10:27:13+05:30', 'bank_reference': '1234567890', 'auth_id': None, 'payment_method': {'upi': {'channel': None, 'upi_id': 'testsuccess@gocash'}}, 'payment_group': 'upi'}, 'customer_details': {'customer_name': 'hsdf', 'customer_id': 'default_customer_id', 'customer_email': 'hello8@gmail.com', 'customer_phone': '0000000000'}, 'charges_details': {'service_charge': 0.19, 'service_tax': 0.03, 'settlement_amount': 9.78, 'settlement_currency': 'INR', 'service_charge_discount': None}}, 'event_time': '2024-09-21T10:27:31+05:30', 'type': 'PAYMENT_CHARGES_WEBHOOK'}
DEBUG:root:Webhook parsed: order_id=hsdfb70141, payment_status=SUCCESS, customer_phone=0000000000
DEBUG:root:Attempting to update order status for order_id: hsdfb70141, status: Order Completed, user_phone: 0000000000
ERROR:root:Error updating order status for order_id hsdfb70141: 404 No document to update: projects/teerkhelo/databases/(default)/documents/users/0000000000





127.0.0.1 - - [26/Aug/2024:03:38:43 +0000] "OPTIONS /resume_payment HTTP/1.1" 200 0 "https://teerkhelo.web.app/" "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Mobile Safari/537.36"
DEBUG:app:Resume payment started
DEBUG:app:Data received: order_id=3rd73256c, customer_name=3rd dfg f, customer_phone=+913333333333
DEBUG:app:Checking if order exists in Firestore
INFO:app:Order 3rd73256c already exists.
DEBUG:app:Creating new payment session ID
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): api.cashfree.com:443
DEBUG:urllib3.connectionpool:https://api.cashfree.com:443 "POST /pg/orders HTTP/11" 409 113
DEBUG:app:Response status code: 409
DEBUG:app:Response data: {'message': 'order with same id is already present', 'code': 'order_already_exists', 'type': 'invalid_request_error'}
127.0.0.1 - - [26/Aug/2024:03:38:44 +0000] "POST /resume_payment HTTP/1.1" 409 50 "https://teerkhelo.web.app/" "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Mobile Safari/537.36"







- - [25/Aug/2024:15:09:20 +0000] "OPTIONS /resume_payment HTTP/1.1" 200 0 "https://teerkhelo.web.app/" "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Mobile Safari/537.36"
DEBUG:app:Headers: {'Content-Type': 'application/json', 'x-client-id': '43164923522f23791291250105946134', 'x-client-secret': 'cfsk_ma_prod_6c5dee4d827cccf049da433c3bc82567_d46b2ff8', 'x-api-version': '2023-08-01'}
DEBUG:app:Payload: {'order_id': 'oggy6cbb40', 'order_amount': '1', 'order_currency': 'INR', 'customer_details': {'customer_id': 'customer_oggy6cbb40', 'customer_name': 'Oggy Yadi', 'customer_email': '+916033037225@example.com', 'customer_phone': '+916033037225'}, 'order_meta': {'return_url': 'https://teerkhelo.web.app/payment_response?order_id=oggy6cbb40', 'notify_url': 'https://cf-py-bvfc.onrender.com/webhook'}}
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): api.cashfree.com:443
DEBUG:urllib3.connectionpool:https://api.cashfree.com:443 "POST /pg/orders HTTP/11" 409 113
DEBUG:app:Response status code: 409
DEBUG:app:Response data: {'message': 'order with same id is already present', 'code': 'order_already_exists', 'type': 'invalid_request_error'}
127.0.0.1 - - [25/Aug/2024:15:09:22 +0000] "POST /resume_payment HTTP/1.1" 409 50 "https://teerkhelo.web.app/" "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Mobile Safari/537.36





INFO:werkzeug:127.0.0.1 - - [26/Aug/2024 08:54:27] "OPTIONS /resume_payment HTTP/1.1" 200 -
DEBUG:app:Resume payment started
DEBUG:app:Data received: order_id=3rd2219d8, customer_name=3rd dfg f, customer_phone=+913333333333    
DEBUG:app:Checking if order exists in Firestore
DEBUG:google.auth.transport.requests:Making request: POST https://oauth2.googleapis.com/token
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): oauth2.googleapis.com:443
DEBUG:urllib3.connectionpool:https://oauth2.googleapis.com:443 "POST /token HTTP/11" 200 None
INFO:app:Order 3rd2219d8 already exists.
DEBUG:app:Creating new payment session ID
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): sandbox.cashfree.com:443
DEBUG:urllib3.connectionpool:https://sandbox.cashfree.com:443 "POST /pg/orders HTTP/11" 200 808
DEBUG:app:Response status code: 200
DEBUG:app:Response data: {'cart_details': None, 'cf_order_id': '2183619383', 'created_at': '2024-08-26T08:59:27+05:30', 'customer_details': {'customer_id': 'customer_3rd2219d8', 'customer_name': '3rd dfg 
f', 'customer_email': '+913333333333@example.com', 'customer_phone': '+913333333333', 'customer_uid': 
None}, 'entity': 'order', 'order_amount': 1.0, 'order_currency': 'INR', 'order_expiry_time': '2024-09-25T08:59:27+05:30', 'order_id': '3rd2219d8', 'order_meta': {'return_url': 'http://localhost:1898/payment_response?order_id=3rd2219d8', 'notify_url': 'https://cf-py-bvfc.onrender.com/webhook', 'payment_methods': None}, 'order_note': None, 'order_splits': [], 'order_status': 'ACTIVE', 'order_tags': None, 'payment_session_id': 'session_yu-GSSQvkjtRIX9gPR00F_OyTIo055iyBl5emavI01GMf6TkYOP3uG9HTXVYVjFmXyuFoY1YZmXO7kouIOl0GNfBtFKDzEIhvDLMpnKzkjzs', 'terminal_data': None}
INFO:werkzeug:127.0.0.1 - - [26/Aug/2024 08:54:30] "POST /resume_payment HTTP/1.1" 200 -



















127.0.0.1 - - [25/Aug/2024:13:43:01 +0000] "OPTIONS /resume_payment HTTP/1.1" 200 0 "https://teerkhelo.web.app/" "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Mobile Safari/537.36"
DEBUG:app:Headers: {'Content-Type': 'application/json', 'x-client-id': '43164923522f23791291250105946134', 'x-client-secret': 'cfsk_ma_prod_6c5dee4d827cccf049da433c3bc82567_d46b2ff8', 'x-api-version': '2023-08-01'}
DEBUG:app:Payload: {'order_id': 'oggy605ea3', 'order_amount': '1', 'order_currency': 'INR', 'customer_details': {'customer_id': 'customer_oggy605ea3', 'customer_name': 'Oggy Yadi', 'customer_email': '+916033037225@example.com', 'customer_phone': '+916033037225'}, 'order_meta': {'return_url': 'https://teerkhelo.web.app/payment_response?order_id=oggy605ea3', 'notify_url': 'https://cf-py-bvfc.onrender.com/webhook'}}
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): api.cashfree.com:443
DEBUG:urllib3.connectionpool:https://api.cashfree.com:443 "POST /pg/orders HTTP/11" 409 113
DEBUG:app:Response status code: 409
DEBUG:app:Response data: {'message': 'order with same id is already present', 'code': 'order_already_exists', 'type': 'invalid_request_error'}
127.0.0.1 - - [25/Aug/2024:13:43:03 +0000] "POST /resume_payment HTTP/1.1" 409 50 "https://teerkhelo.web.app/" "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Mobile Safari/537.36"
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     f'http://localhost:14128/payment_response?order_id={quote(str(order_id))}'
            f'&status=success'
            f'&user_name={quote(str(customer_name))}'
            f'&user_mobile_number={quote(str(customer_phone))}'
            f'&total_amount={quote(str(data.get("total_amount", "")))}'
            f'&selected_numbers={quote(json.dumps(data.get("selected_numbers", [])))}'
            f'&selected_ranges={quote(json.dumps(data.get("selected_ranges", [])))}'
            f'&hou_heda_values={quote(json.dumps(data.get("hou_heda_values", {})))}'
            f'&hou_jeda_values={quote(json.dumps(data.get("hou_jeda_values", {})))}'
            f'&f_r_amounts={quote(json.dumps([0 if v is None else v for v in data.get("f_r_amounts", [])]))}'
            f'&s_r_amounts={quote(json.dumps([0 if v is None else v for v in data.get("s_r_amounts", [])]))}'
            f'&f_hou_amount={quote(str(data.get("f_hou_amount", "")))}'
            f'&s_hou_amount={quote(str(data.get("s_hou_amount", "")))}'




import json
from flask import Flask, request, jsonify
import requests
import os
from dotenv import load_dotenv
from flask_cors import CORS
from urllib.parse import quote
import logging
import firebase_admin
from firebase_admin import credentials, firestore

# Initialize Firebase Admin
cred = credentials.Certificate('C:/NT Python/cf py/teerkhelo-firebase-adminsdk-grjrx-b9583b7aa3.json')

firebase_admin.initialize_app(cred)

# Get Firestore client
db = firestore.client()

load_dotenv()


app = Flask(__name__)
CORS(app)

CASHFREE_APP_ID = os.getenv('CASHFREE_APP_ID')
CASHFREE_SECRET_KEY = os.getenv('CASHFREE_SECRET_KEY')
CASHFREE_API_URL = "https://sandbox.cashfree.com/pg/orders"

# In-memory storage for demo purposes; use a database in production
order_data_store = {}

@app.route('/create_order', methods=['POST'])
def create_order():
    try:
        data = request.json
        logging.debug(f"Received data: {data}")

        order_id = data.get('order_id')
        if not order_id:
            logging.error("Order ID is missing in the request data")
            return jsonify({'error': 'Order ID is required'}), 400

     

        return_url = (
            f'http://localhost:6193/payment_response?order_id={quote(str(order_id))}'
            f'&status=success'
         
        )

        headers = {
            'Content-Type': 'application/json',
            'x-client-id': CASHFREE_APP_ID,
            'x-client-secret': CASHFREE_SECRET_KEY,
            'x-api-version': '2023-08-01'
        }

        payload = {
            'order_id': order_id,
            'order_amount': data.get('order_amount'),
            'order_currency': 'INR',
            'customer_details': {
                'customer_id': data.get('customer_id', 'default_customer_id'),
                'customer_name': data.get('customer_name'),
                'customer_email': data.get('customer_email'),
                'customer_phone': data.get('customer_phone')
            },
            'order_meta': {
                'return_url': return_url
            }
        }

        logging.debug(f"Payload: {payload}")
        response = requests.post(CASHFREE_API_URL, json=payload, headers=headers)
        response_data = response.json()

        logging.debug(f"Response: {response_data}")

        if response.status_code == 200:
            payment_session_id = response_data.get('payment_session_id', '')
            if payment_session_id:
                return jsonify({
                    'order_id': order_id,
                    'payment_session_id': payment_session_id
                })
            else:
                return jsonify({'error': 'Payment session ID not found'}), 500
        else:
            return jsonify({'error': response_data.get('message', 'Unknown error occurred')}), response.status_code

    except Exception as e:
        logging.error(f"Exception occurred: {e}")
        return jsonify({'error': 'An error occurred', 'details': str(e)}), 500


@app.route('/initiate_payment', methods=['POST'])
def initiate_payment():
    data = request.json
    order_id = data.get('order_id')
    order_amount = data.get('order_amount')

    payment_url = "https://sandbox.cashfree.com/checkout"

    payload = {
        'order_id': order_id,
        'order_amount': order_amount,
        'order_currency': 'INR',
        'return_url': f'http://localhost:6193/payment_response?order_id={order_id}'
    }

    response = requests.post(payment_url, json=payload, headers={
        'Content-Type': 'application/json',
        'x-client-id': CASHFREE_APP_ID,
        'x-client-secret': CASHFREE_SECRET_KEY,
    })

    if response.status_code == 200:
        data = response.json()
        return jsonify({'payment_url': data.get('payment_url')})
    else:
        return jsonify({'error': 'Failed to initiate payment'}), response.status_code

@app.route('/payment_response', methods=['GET'])
def payment_response():
    data = request.args.to_dict()
    order_id = data.get('order_id')
    user_name = data.get('user_name')
    user_mobile_number = data.get('user_mobile_number')
    data_reference_id = data.get('data_reference_id')

    # Retrieve stored data using the reference ID
    stored_data = order_data_store.get(data_reference_id, {})

    # Debug logging
    logging.debug(f"Received data: {data}")
    logging.debug(f"Stored data: {stored_data}")

    # Verify the payment with Cashfree
    payment_verification_url = f'https://sandbox.cashfree.com/pg/orders/{order_id}'
    headers = {
        'x-client-id': CASHFREE_APP_ID,
        'x-client-secret': CASHFREE_SECRET_KEY,
    }

    verification_response = requests.get(payment_verification_url, headers=headers)
    verification_data = verification_response.json()

    if verification_response.status_code == 200 and verification_data.get('order_status') == 'PAID':
       # Payment is verified, save status as "Order Completed"
        db.collection(f'users/{user_mobile_number}/orders').document(order_id).update({
            'status': 'Order Completed'
        })
        return jsonify({
            'message': 'Payment verified',
            'order_id': order_id,
            'status': 'success',
            'redirect_url': 'image_screen',
        })
    else:
        # Payment not verified, save status as "Order Cancelled"
        db.collection(f'users/{user_mobile_number}/orders').document(order_id).update({
            'status': 'Order Cancelled'
        })
        return jsonify({
            'message': 'Payment verification failed',
            'order_id': order_id,
            'status': 'failed'
        })


@app.route('/payment_notification', methods=['POST'])
def payment_notification():
    data = request.form.to_dict()
    # Handle payment notification, usually updating the order status based on the notification.
    return jsonify({'message': 'Payment notification received', 'data': data})

if __name__ == '__main__':
    app.run(debug=False, host='127.0.0.1', port=5000) # Turn off debug mode for production
# host='127.0.0.1', port=5000